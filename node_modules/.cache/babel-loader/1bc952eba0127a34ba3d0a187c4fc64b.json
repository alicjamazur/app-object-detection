{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromCognitoIdentity = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar client_cognito_identity_1 = require(\"@aws-sdk/client-cognito-identity\");\n\nvar property_provider_1 = require(\"@aws-sdk/property-provider\");\n\nvar resolveLogins_1 = require(\"./resolveLogins\");\n/**\n * Retrieves temporary AWS credentials using Amazon Cognito's\n * `GetCredentialsForIdentity` operation.\n *\n * Results from this function call are not cached internally.\n */\n\n\nfunction fromCognitoIdentity(parameters) {\n  var _this = this;\n\n  return function () {\n    return tslib_1.__awaiter(_this, void 0, void 0, function () {\n      var _a, _b, _c, AccessKeyId, Expiration, _d, SecretKey, SessionToken, _e, _f, _g, _h, _j;\n\n      return tslib_1.__generator(this, function (_k) {\n        switch (_k.label) {\n          case 0:\n            _f = (_e = parameters.client).send;\n            _g = client_cognito_identity_1.GetCredentialsForIdentityCommand.bind;\n            _h = {\n              CustomRoleArn: parameters.customRoleArn,\n              IdentityId: parameters.identityId\n            };\n            if (!parameters.logins) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , resolveLogins_1.resolveLogins(parameters.logins)];\n\n          case 1:\n            _j = _k.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            _j = undefined;\n            _k.label = 3;\n\n          case 3:\n            return [4\n            /*yield*/\n            , _f.apply(_e, [new (_g.apply(client_cognito_identity_1.GetCredentialsForIdentityCommand, [void 0, (_h.Logins = _j, _h)]))()])];\n\n          case 4:\n            _a = _k.sent().Credentials, _b = _a === void 0 ? throwOnMissingCredentials() : _a, _c = _b.AccessKeyId, AccessKeyId = _c === void 0 ? throwOnMissingAccessKeyId() : _c, Expiration = _b.Expiration, _d = _b.SecretKey, SecretKey = _d === void 0 ? throwOnMissingSecretKey() : _d, SessionToken = _b.SessionToken;\n            return [2\n            /*return*/\n            , {\n              accessKeyId: AccessKeyId,\n              secretAccessKey: SecretKey,\n              sessionToken: SessionToken,\n              expiration: Expiration\n            }];\n        }\n      });\n    });\n  };\n}\n\nexports.fromCognitoIdentity = fromCognitoIdentity;\n\nfunction throwOnMissingAccessKeyId() {\n  throw new property_provider_1.ProviderError(\"Response from Amazon Cognito contained no access key ID\");\n}\n\nfunction throwOnMissingCredentials() {\n  throw new property_provider_1.ProviderError(\"Response from Amazon Cognito contained no credentials\");\n}\n\nfunction throwOnMissingSecretKey() {\n  throw new property_provider_1.ProviderError(\"Response from Amazon Cognito contained no secret key\");\n}","map":{"version":3,"sources":["../../src/fromCognitoIdentity.ts"],"names":[],"mappings":";;;;;;;;;AAAA,IAAA,yBAAA,GAAA,OAAA,CAAA,kCAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AAIA,IAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AAEA;;;;;;;;AAMA,SAAgB,mBAAhB,CAAoC,UAApC,EAA6E;AAA7E,MAAA,KAAA,GAAA,IAAA;;AACE,SAAO,YAAA;AAAA,WAAA,OAAA,CAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;AAQK,YAAA,EAAA,GAAA,CAAA,EAAA,GAAA,UAAU,CAAC,MAAX,EAAkB,IAAlB;iBACJ,yBAAA,CAAA,gCAAA,CAAgC,I;;AAClC,cAAA,aAAa,EAAE,UAAU,CAAC,a;AAC1B,cAAA,UAAU,EAAE,UAAU,CAAC;;iBACf,UAAU,CAAC,M,EAAX,OAAA,CAAA;AAAA;AAAA,cAAA,CAAA,CAAA;AAAoB,mBAAA,CAAA;AAAA;AAAA,cAAM,eAAA,CAAA,aAAA,CAAc,UAAU,CAAC,MAAzB,CAAN,CAAA;;;AAAA,YAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA;;;;;;AAAyC,YAAA,EAAA,GAAA,SAAA;;;;AAJrE,mBAAA,CAAA;AAAA;AAAA,cAAM,EAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CACR,KAAA,EAAA,CAAA,KAAA,CAAI,yBAAA,CAAA,gCAAJ,EAAoC,CAAA,KAAA,CAAA,GAGlC,EAAA,CAAA,MAAA,GAAM,EAAN,EACA,EAJkC,EAApC,CAAA,GADQ,CAAA,CAAN,CAAA;;;AANF,YAAA,EAAA,GAME,EAAA,CAAA,IAAA,EAAA,CAD6B,WAL/B,EAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAKI,yBAAyB,EAL7B,GAK+B,EAL/B,EACE,EAAA,GAAA,EAAA,CAAA,WADF,EACE,WAAW,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,yBAAyB,EAA5B,GAA8B,EAD3C,EAEE,UAAU,GAAA,EAAA,CAAA,UAFZ,EAGE,EAAA,GAAA,EAAA,CAAA,SAHF,EAGE,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,uBAAuB,EAA1B,GAA4B,EAHvC,EAIE,YAAY,GAAA,EAAA,CAAA,YAJd;AAcF,mBAAA,CAAA;AAAA;AAAA,cAAO;AACL,cAAA,WAAW,EAAE,WADR;AAEL,cAAA,eAAe,EAAE,SAFZ;AAGL,cAAA,YAAY,EAAE,YAHT;AAIL,cAAA,UAAU,EAAE;AAJP,aAAP,CAAA;;;KAhBK,CAAA;AAsBN,GAtBD;AAuBD;;AAxBD,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AAkCA,SAAS,yBAAT,GAAkC;AAChC,QAAM,IAAI,mBAAA,CAAA,aAAJ,CAAkB,yDAAlB,CAAN;AACD;;AAED,SAAS,yBAAT,GAAkC;AAChC,QAAM,IAAI,mBAAA,CAAA,aAAJ,CAAkB,uDAAlB,CAAN;AACD;;AAED,SAAS,uBAAT,GAAgC;AAC9B,QAAM,IAAI,mBAAA,CAAA,aAAJ,CAAkB,sDAAlB,CAAN;AACD","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromCognitoIdentity = void 0;\nvar tslib_1 = require(\"tslib\");\nvar client_cognito_identity_1 = require(\"@aws-sdk/client-cognito-identity\");\nvar property_provider_1 = require(\"@aws-sdk/property-provider\");\nvar resolveLogins_1 = require(\"./resolveLogins\");\n/**\n * Retrieves temporary AWS credentials using Amazon Cognito's\n * `GetCredentialsForIdentity` operation.\n *\n * Results from this function call are not cached internally.\n */\nfunction fromCognitoIdentity(parameters) {\n    var _this = this;\n    return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var _a, _b, _c, AccessKeyId, Expiration, _d, SecretKey, SessionToken, _e, _f, _g, _h, _j;\n        return tslib_1.__generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    _f = (_e = parameters.client).send;\n                    _g = client_cognito_identity_1.GetCredentialsForIdentityCommand.bind;\n                    _h = {\n                        CustomRoleArn: parameters.customRoleArn,\n                        IdentityId: parameters.identityId\n                    };\n                    if (!parameters.logins) return [3 /*break*/, 2];\n                    return [4 /*yield*/, resolveLogins_1.resolveLogins(parameters.logins)];\n                case 1:\n                    _j = _k.sent();\n                    return [3 /*break*/, 3];\n                case 2:\n                    _j = undefined;\n                    _k.label = 3;\n                case 3: return [4 /*yield*/, _f.apply(_e, [new (_g.apply(client_cognito_identity_1.GetCredentialsForIdentityCommand, [void 0, (_h.Logins = _j,\n                                _h)]))()])];\n                case 4:\n                    _a = (_k.sent()).Credentials, _b = _a === void 0 ? throwOnMissingCredentials() : _a, _c = _b.AccessKeyId, AccessKeyId = _c === void 0 ? throwOnMissingAccessKeyId() : _c, Expiration = _b.Expiration, _d = _b.SecretKey, SecretKey = _d === void 0 ? throwOnMissingSecretKey() : _d, SessionToken = _b.SessionToken;\n                    return [2 /*return*/, {\n                            accessKeyId: AccessKeyId,\n                            secretAccessKey: SecretKey,\n                            sessionToken: SessionToken,\n                            expiration: Expiration,\n                        }];\n            }\n        });\n    }); };\n}\nexports.fromCognitoIdentity = fromCognitoIdentity;\nfunction throwOnMissingAccessKeyId() {\n    throw new property_provider_1.ProviderError(\"Response from Amazon Cognito contained no access key ID\");\n}\nfunction throwOnMissingCredentials() {\n    throw new property_provider_1.ProviderError(\"Response from Amazon Cognito contained no credentials\");\n}\nfunction throwOnMissingSecretKey() {\n    throw new property_provider_1.ProviderError(\"Response from Amazon Cognito contained no secret key\");\n}\n//# sourceMappingURL=fromCognitoIdentity.js.map"]},"metadata":{},"sourceType":"script"}