AWSTemplateFormatVersion: "2010-09-09"
Description: Serverless Application that detects objects on input images.

Parameters:
  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
    
Resources:

  EC2Instance: 
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref LatestAmiId
      KeyName: lambda-ml
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          DeleteOnTermination: "true"
          SubnetId: subnet-0092a123e432ab80d
          GroupSet: 
            - sg-fc7ac6a0
            - sg-0ef193a7771c387c8
      IamInstanceProfile: !Ref InstanceProfile
      InstanceInitiatedShutdownBehavior: terminate
      UserData: 
        Fn::Base64: 
          !Sub 
            - |
              #!/bin/bash
              sudo yum update -y
              
              # Download a sample file
              wget https://raw.githubusercontent.com/molly-moon/projects/master/app-object-detection/web-app/model/coco_classes.txt
    
              # Update config file
              sed -i 's/person/${AWS::Region}/g' coco_classes.txt
              sed -i 's/bicycle/${EC2Role}/g' coco_classes.txt
              sed -i 's/car/${MyVariable}/g' coco_classes.txt
  

            - MyVariable: !Ref EC2Role

  EC2Role:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"

  InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - !Ref EC2Role

