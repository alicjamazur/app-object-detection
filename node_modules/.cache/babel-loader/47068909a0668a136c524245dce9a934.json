{"ast":null,"code":"var _jsxFileName = \"/Users/alicjamazur/Desktop/work-in-progress/app-yolov2-client /src/containers/NewInference.js\";\nimport React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./NewInference.css\";\nimport { API } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport { Link } from \"react-router-dom\";\nexport default function NewInference() {\n  const file = useRef(null);\n  const [outputImage, setOutputImage] = useState(null);\n  const [inputImage, setInputImage] = useState(null);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n    console.log(file.current);\n    var reader = new FileReader();\n    reader.readAsDataURL(file.current);\n\n    reader.onloadend = function () {\n      const base64string = reader.result; // console.log(\"Base64 String - \", base64string);\n\n      var imageBase64 = base64string.substr(base64string.indexOf(',') + 1);\n      setInputImage(imageBase64); // console.log('Base64 String without Tags- ', imageBase64);\n    };\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      while (outputImage == null) {\n        let response = await inference(inputImage);\n        setOutputImage(response);\n      }\n    } catch (e) {\n      onError(e);\n    }\n\n    setIsLoading(false);\n  }\n\n  function inference(inputImage) {\n    return API.post(\"inference\", ``, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: inputImage\n    });\n  }\n\n  function renderImage(image) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `data:image/png;base64,${image}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewInference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"imageFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.File, {\n    label: \"Choose an image to process\",\n    autoFocus: true,\n    size: \"lg\",\n    onChange: handleFileChange,\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, isLoading ? \"Detecting objects ...\" : \"\"), /*#__PURE__*/React.createElement(LoaderButton, {\n    type: \"submit\",\n    bsSize: \"medium\",\n    bsStyle: \"danger\",\n    isLoading: isLoading,\n    disabled: inputImage == null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Detect objects\")), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, outputImage == null ? \"\" : renderImage(outputImage)));\n} //","map":{"version":3,"sources":["/Users/alicjamazur/Desktop/work-in-progress/app-yolov2-client /src/containers/NewInference.js"],"names":["React","useRef","useState","useHistory","Form","FormGroup","FormControl","ControlLabel","LoaderButton","config","API","onError","Link","NewInference","file","outputImage","setOutputImage","inputImage","setInputImage","history","isLoading","setIsLoading","handleFileChange","event","current","target","files","console","log","reader","FileReader","readAsDataURL","onloadend","base64string","result","imageBase64","substr","indexOf","handleSubmit","preventDefault","response","inference","e","post","headers","body","renderImage","image"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./NewInference.css\";\nimport { API } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport { Link } from \"react-router-dom\";\n\n\nexport default function NewInference() {\n  const file = useRef(null);\n  const [outputImage, setOutputImage] = useState(null);\n  const [inputImage, setInputImage] = useState(null);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  \n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n    console.log(file.current);\n\n    var reader = new FileReader();\n    reader.readAsDataURL(file.current);\n    reader.onloadend = function() {\n      const base64string = reader.result;\n      // console.log(\"Base64 String - \", base64string);\n      var imageBase64 = base64string.substr(base64string.indexOf(',') + 1);\n      setInputImage(imageBase64);\n      // console.log('Base64 String without Tags- ', imageBase64);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    \n\n    setIsLoading(true);\n\n    try {\n\n      while (outputImage==null) {\n        let response = await inference(inputImage);\n        setOutputImage(response);\n      }\n    } catch (e) {\n      onError(e);\n    }\n    setIsLoading(false);\n  }\n  \n  function inference(inputImage) {\n    return API.post(\"inference\", ``, {\n      headers: {\n        \"Content-Type\": \"application/json\", \n        \"Accept\": \"application/json\"\n      },\n      body: inputImage\n    });\n    \n  }\n  \n  function renderImage(image) {\n    return (\n      <div>\n        <img src={`data:image/png;base64,${image}`} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"NewInference\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"imageFile\">\n          \n          <Form.File label=\"Choose an image to process\" autoFocus size=\"lg\" onChange={handleFileChange} type=\"file\" />\n        </FormGroup>\n        <p>{ isLoading ? \"Detecting objects ...\" : \"\" }</p>\n        <LoaderButton\n          type=\"submit\"\n          bsSize=\"medium\"\n          bsStyle=\"danger\"\n          isLoading={isLoading}\n          disabled={inputImage==null}\n        >\n         Detect objects\n        </LoaderButton>\n      </form>\n\n      <h4> \n      { outputImage == null ? \"\" : renderImage(outputImage) }\n      </h4>\n    \n    </div>\n  );\n  }\n\n  // "]},"metadata":{},"sourceType":"module"}