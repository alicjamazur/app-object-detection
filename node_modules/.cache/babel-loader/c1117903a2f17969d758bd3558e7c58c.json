{"ast":null,"code":"var _jsxFileName = \"/Users/alicjamazur/Desktop/work-in-progress/app-yolov2-client /src/containers/NewInference.js\";\nimport React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./NewInference.css\";\nimport { API } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport { Link } from \"react-router-dom\";\nexport default function NewInference() {\n  const file = useRef(null);\n  const [result, setResult] = useState(null);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n    console.log(file.current);\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      const base64string = reader.result;\n      console.log(\"Base64: \" + base64string);\n    };\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n  }\n\n  function inference(image) {\n    return API.post(\"inference\", ``, {\n      headers: {\n        \"Content-Type\": \"image/png\"\n      },\n      body: image\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewInference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"imageFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ControlLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"File \"), /*#__PURE__*/React.createElement(FormControl, {\n    onChange: handleFileChange,\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    bsStyle: \"primary\",\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Detect\")));\n}","map":{"version":3,"sources":["/Users/alicjamazur/Desktop/work-in-progress/app-yolov2-client /src/containers/NewInference.js"],"names":["React","useRef","useState","useHistory","FormGroup","FormControl","ControlLabel","LoaderButton","config","API","onError","Link","NewInference","file","result","setResult","history","isLoading","setIsLoading","handleFileChange","event","current","target","files","console","log","reader","FileReader","onloadend","base64string","handleSubmit","preventDefault","inference","image","post","headers","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,YAAjC,QAAqD,iBAArD;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,oBAAP;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,eAAe,SAASC,YAAT,GAAwB;AACrC,QAAMC,IAAI,GAAGZ,MAAM,CAAC,IAAD,CAAnB;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMc,OAAO,GAAGb,UAAU,EAA1B;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;;AAGA,WAASiB,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/BP,IAAAA,IAAI,CAACQ,OAAL,GAAeD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACQ,OAAjB;AACA,UAAMK,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,SAAP,GAAkB,MAAM;AACtB,YAAMC,YAAY,GAAGH,MAAM,CAACZ,MAA5B;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaI,YAAzB;AACD,KAHD;AAMD;;AAGD,iBAAeC,YAAf,CAA4BV,KAA5B,EAAmC;AACjCA,IAAAA,KAAK,CAACW,cAAN;AAEAb,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAED;;AAGD,WAASc,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,WAAOxB,GAAG,CAACyB,IAAJ,CAAS,WAAT,EAAuB,EAAvB,EAA0B;AAC/BC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OADsB;AAE/BC,MAAAA,IAAI,EAAEH;AAFyB,KAA1B,CAAP;AAID;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEH,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEX,gBAAvB;AAAyC,IAAA,IAAI,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE,oBAAC,YAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,MAAM,EAAC,OAHT;AAIE,IAAA,OAAO,EAAC,SAJV;AAKE,IAAA,SAAS,EAAEF,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF,CADF;AAoBC","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./NewInference.css\";\nimport { API } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport { Link } from \"react-router-dom\";\n\nexport default function NewInference() {\n  const file = useRef(null);\n  const [result, setResult] = useState(null);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  \n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n    console.log(file.current);\n    const reader = new FileReader();\n    reader.onloadend =() => {\n      const base64string = reader.result;\n      console.log(\"Base64: \" + base64string);\n    }\n    \n\n  }\n  \n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    setIsLoading(true);\n  \n  }\n\n  \n  function inference(image) {\n    return API.post(\"inference\", ``, {\n      headers: {\"Content-Type\": \"image/png\"},\n      body: image\n    });\n  }\n\n  return (\n    <div className=\"NewInference\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"imageFile\">\n          <ControlLabel>File </ControlLabel>\n          <FormControl onChange={handleFileChange} type=\"file\" />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          bsStyle=\"primary\"\n          isLoading={isLoading}\n        >\n         Detect\n        </LoaderButton>\n      </form>\n      \n    </div>\n  );\n  }"]},"metadata":{},"sourceType":"module"}