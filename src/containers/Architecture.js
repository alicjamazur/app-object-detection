import React, { useState } from "react";
import { Panel, Col, Row, Grid } from "react-bootstrap";
import ImageMapper from 'react-image-mapper';

import "./Architecture.css";

export default function Architecture() {

  // const URL = "https://demo-object-detection-app.s3.amazonaws.com/architecture3.png";
  const URL = "https://github.com/molly-moon/app-object-detection/raw/master/architecture.png";
  
  const MAP = {
    name: "my-map",
    areas: [
      { name: "1", shape: "circle", coords: [133,59,10], strokeColor: "red" },
      { name: "2", shape: "circle", coords: [247,197.5,10], strokeColor: "red"  },
      { name: "3", shape: "circle", coords: [484,198,10], strokeColor: "red"  },
      { name: "4", shape: "circle", coords: [620,331,10], strokeColor: "red"  },
      { name: "5", shape: "circle", coords: [485,259,10], strokeColor: "red" },
      { name: "6", shape: "circle", coords: [248,259,10], strokeColor: "red" },
    ]
  };


  const panelContent = {
    "header": ["The back-end is built on top of Serverless Node.js Starter, a part of ", (<a href="https://serverless-stack.com">Serverless Stack</a>), ", an open-source project developed by Anomaly Innovations. \
                They created a step-by-step guide to help you build a full-stack serverless application hosted on AWS. \n \
                The front-end is a single page app build on top of ", (<a href="https://github.com/facebook/create-react-app">Create React App project</a>), " developed by Facebook."],

    "1": "The browser downloads and stores the static content that forms this website. \
          The user interface is built with React.js, while the untime environment uses Node.js platform. \
          Open-source AWS framework Amplify is used to make API calls.",
          
    "2": "Within a click of a button the uploaded image is base64 encoded for safe transport through the web \
          and AWS Amplify makes a REST API call to API Gateway, which is set up as Lambda Proxy integration.",

    "3": ["API Gateway invokes Lambda function that hosts Python code used to make machine learning inference. \
          The inference code was written by me during ", (<a href="https://www.coursera.org/specializations/deep-learning">the Deep Learning Specialization course</a>), " and it is greatly inspired by ", (<a href="https://github.com/allanzelener/YAD2K">this</a>), " project by Allan Zelener. ", 
          "To make predictions I use trained machine learning model ", (<a href="https://pjreddie.com/darknet/yolov2/">YOLOv2</a>), ", authored by Joseph Redmon. \
          YOLOv2 detects thousands of potential objects on the input image by specifying bounding box coordinates relative to image dimensions. \
          Thanks to non-max-suppression technique, Lambda outputs only the most probable predictions."],

    "4": "Due to bulky both model weights and library dependencies, Amazon EFS is used to extend Lambda storage space.",

    "5": "Lambda returns the input image with drawn bounding boxes and marked labels to indicate predicted objects. For safe web transport to the user, the image is again base64 encoded.",

    "6": "API Gateway passes the response generated by Lambda to the client browser."
  };
  
  const panelTitle = {
    "header": "DEMO object detection app",
    "1": "1 - Static website hosting on S3",
    "2": "2 - API Gateway call via Amplify",
    "3": "3 - API Lambda Proxy integration",
    "4": "4 - Lambda intergrated with EFS for machine learning inference",
    "5": "5 - Lambda integration response",
    "6": "6 - API Gateway response via Amplify"
  };
    
  const [title, setTitle] = useState(panelTitle["header"]);
  const [content, setContent] = useState(panelContent["header"]);

  function handleClick(event) {
    const num = event.name.toString();
    setTitle(panelTitle[num]);
    setContent(panelContent[num]);
  };



  return (
    <Grid >
      <Row className="row">
        <Col xs={6} md={4} className="col1">
          <p> Click on numbers on the diagram to learn more on the workflow.</p>
            <Panel bsStyle="danger" className="panel">
              <Panel.Heading>
                <Panel.Title componentClass="h3">
                  {title}

                </Panel.Title>
              </Panel.Heading>
              <Panel.Body>{content}</Panel.Body>
            </Panel>
        </Col>
        <Col xs={6} md={4}>
          <ImageMapper src={URL} map={MAP} width={794} onClick={handleClick}/>
        </Col>
      </Row>
    </Grid> 


    );
}

     {/* <div className="image">
        <OverlayTrigger trigger="click" placement="right" onClick={handleClick} overlay={choosePopover()}>
          
        </OverlayTrigger>
        <div> */}


// Popoover on the left upper corner
// export default function Architecture() {

//   const [show, setShow] = useState(false);
//   const [target, setTarget] = useState(null);
//   const ref = useRef(null);

//   function handleClick(event) {
//     setShow(!show);
//     setTarget(event.target);
//     console.log("Ref: ", ref.current);
//     console.log("Target: ", event.target);

//   }


//   return (
//     <body>
//     <div  >
//       <img class="image" src={require("./architecture3.png")}
//             alt="App architecture" 
//             height="562"
//             weight="644"
//             usemap="#image-map">
//       </img>
      // <map  name="image-map">
      // <area ref={ref} target="_self" alt="1" onClick={handleClick}  href="#" coords="133,58,20" shape="circle" />
      // <area ref={ref} target="_self" alt="2" title="2" onClick={handleClick} href="#" coords="247,198.5,20" shape="circle" />
      // </map>  

//     </div>
//     <div>
      
//       <Overlay
//         show={show}
//         target={target}
//         placement="bottom"
//         container={ref.current}
//         containerPadding={0}
//       >
//         <Popover id="popover1" title="Popover bottom" >
//           <strong>Holy guacamole!</strong>
//         </Popover>
//       </Overlay>
//     </div>
//     </body>
//   );
// }


// This works
// export default function Architecture() {
 
//   const popoverLeft = (
//     <Popover id="popover-positioned-left" title="Popover left">
//       <strong>Holy guacamole!</strong> Check this info.
//     </Popover>
//   );
  
//   return (
//     <OverlayTrigger trigger="click" placement="right" overlay={popoverLeft}>
//       <Button>Holy guacamole!</Button>
//     </OverlayTrigger>

//   );
// }

// export default function HowItWorks() {  

// export default function Architecture() {
//   const [show, setShow] = useState(false);
//   const [target, setTarget] = useState(null);
//   const ref = useRef(null);

//   function handleClick(event) {
  
//     setShow(!show);
//     setTarget(event.target);
//     // console.log(event.target);
//     // alert("Hello");
//   };

//   return (
//     <div ref={ref}>
//       <Button onClick={handleClick}>Holy guacamole!</Button>

//       <Overlay
//         show={show}
//         target={target}
//         placement="bottom"
//         container={ref.current}
//         containerPadding={20}
        
//       >
  
//       </Overlay> */}
      
//      </div>
//   );
// }




  // <h5> Click on a number to learn more on the workflow. </h5>
  //       <img class="image" src={require("./architecture3.png")}
  //           alt="App architecture" 
  //           height="562"
  //           weight="644"
  //           usemap="#image-map">
  //       </img>
  // <map name="image-map">
  //       <area target="_self"  id="popover1" alt="1" title="1" onClick={handleClick} href="#" coords="133,58,20" shape="circle" />
  //       </map>

  // <area target="_blank" alt="2" title="2" href="#" coords="247,198.5,20" shape="circle" />
  //       <area target="_blank" alt="3" title="3" href="3" coords="485,198.5,20" shape="circle" />
  //       <area target="_blank" alt="4" title="4" href="4" coords="621,330.5,20" shape="circle" />
  //       <area target="_blank" alt="5" title="5" href="5" coords="484,259,20" shape="circle" />
  //       <area target="_blank" alt="6" title="6" href="6" coords="250,259,20" shape="circle" />

