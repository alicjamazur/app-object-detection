{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRetryPlugin = exports.retryMiddlewareOptions = exports.retryMiddleware = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nexports.retryMiddleware = function (options) {\n  return function (next) {\n    return function (args) {\n      return tslib_1.__awaiter(void 0, void 0, void 0, function () {\n        return tslib_1.__generator(this, function (_a) {\n          return [2\n          /*return*/\n          , options.retryStrategy.retry(next, args)];\n        });\n      });\n    };\n  };\n};\n\nexports.retryMiddlewareOptions = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\"\n};\n\nexports.getRetryPlugin = function (options) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(exports.retryMiddleware(options), exports.retryMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"sources":["../../src/retryMiddleware.ts"],"names":[],"mappings":";;;;;;;;;AAYa,OAAA,CAAA,eAAA,GAAkB,UAAC,OAAD,EAA6B;AAAK,SAAA,UAC/D,IAD+D,EAC7B;AACD,WAAA,UACjC,IADiC,EACE;AAAA,aAAA,OAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;AAAA,eAAA,OAAA,CAAA,WAAA,CAAA,IAAA,EAAA,UAAA,EAAA,EAAA;AACQ,iBAAA,CAAA;AAAA;AAAA,YAAA,OAAO,CAAC,aAAR,CAAsB,KAAtB,CAA4B,IAA5B,EAAkC,IAAlC,CAAA,CAAA;SADR,CAAA;OAAA,CAAA;AADF,KAAA;AAF8B,GAAA;AAImB,CAJvE;;AAMA,OAAA,CAAA,sBAAA,GAA2E;AACtF,EAAA,IAAI,EAAE,iBADgF;AAEtF,EAAA,IAAI,EAAE,CAAC,OAAD,CAFgF;AAGtF,EAAA,IAAI,EAAE,iBAHgF;AAItF,EAAA,QAAQ,EAAE;AAJ4E,CAA3E;;AAOA,OAAA,CAAA,cAAA,GAAiB,UAAC,OAAD,EAA6B;AAA0B,SAAC;AACpF,IAAA,YAAY,EAAE,UAAC,WAAD,EAAY;AACxB,MAAA,WAAW,CAAC,GAAZ,CAAgB,OAAA,CAAA,eAAA,CAAgB,OAAhB,CAAhB,EAA0C,OAAA,CAAA,sBAA1C;AACD;AAHmF,GAAD;AAInF,CAJW","sourcesContent":["import {\n  AbsoluteLocation,\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  FinalizeRequestHandlerOptions,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nimport { RetryResolvedConfig } from \"./configurations\";\n\nexport const retryMiddleware = (options: RetryResolvedConfig) => <Output extends MetadataBearer = MetadataBearer>(\n  next: FinalizeHandler<any, Output>\n): FinalizeHandler<any, Output> => async (\n  args: FinalizeHandlerArguments<any>\n): Promise<FinalizeHandlerOutput<Output>> => options.retryStrategy.retry(next, args);\n\nexport const retryMiddlewareOptions: FinalizeRequestHandlerOptions & AbsoluteLocation = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n};\n\nexport const getRetryPlugin = (options: RetryResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}