import React, { useState } from "react";
import { Panel, Col, Row, Grid } from "react-bootstrap";
import ImageMapper from 'react-image-mapper';

import "./Architecture.css";

export default function Architecture() {

  // const URL = "https://demo-object-detection-app.s3.amazonaws.com/architecture3.png";
  const URL = "https://github.com/molly-moon/app-object-detection/raw/master/architecture.png";
  
  const MAP = {
    name: "my-map",
    areas: [
      { name: "1", shape: "circle", coords: [133,59,10], strokeColor: "red" },
      { name: "2", shape: "circle", coords: [247,197.5,10], strokeColor: "red"  },
      { name: "3", shape: "circle", coords: [484,198,10], strokeColor: "red"  },
      { name: "4", shape: "circle", coords: [620,331,10], strokeColor: "red"  },
      { name: "5", shape: "circle", coords: [485,259,10], strokeColor: "red" },
      { name: "6", shape: "circle", coords: [248,259,10], strokeColor: "red" },
    ]
  };


  const panelContent = {
    "header": ["The back-end is built on top of Serverless Node.js Starter, a part of ", (<a href="https://serverless-stack.com">Serverless Stack</a>), ", an open-source project developed by Anomaly Innovations. \
                They created a step-by-step guide to help you build a full-stack serverless application hosted on AWS. \n \
                The front-end is a single page app build on top of ", (<a href="https://github.com/facebook/create-react-app">Create React App project</a>), " developed by Facebook."],

    "1": "The browser downloads and stores the static content used by this website. \
          The user interface was built with React.js, and server-side JavaScript execution is possible thanks to Node.js runtime. \
          Open-source AWS framework Amplify is used to handle API calls.",
          
    "2": "With the click of a button the uploaded image is base64 encoded for safe transport through the web \
          and AWS Amplify makes a REST API call to API Gateway, which is set up as Lambda Proxy integration.",

    "3": ["API Gateway invokes Lambda function that hosts Python code used to detect objects on input images. \
          The inference code uses ", (<a href="https://pjreddie.com/darknet/yolov2/">YOLOv2</a>), " , a deep learning model created by Joseph Redmon. \
          The keras implementation of YOLOv2 I use in this project is one of my assignments from", 
          (<a href="https://www.coursera.org/specializations/deep-learning?utm_source=gg&utm_medium=sem&utm_content=17-DeepLearning-LATAM&campaignid=6516520287&adgroupid=77982690923&device=c&keyword=coursera%20deep%20learning%20ai&matchtype=b&network=g&devicemodel=&adpostion=&creativeid=383382632097&hide_mobile_promo&gclid=CjwKCAjwkJj6BRA-EiwA0ZVPVg2MCerBH5g0Hh03wK0ESxG68Ty0ulraJbtGfk9VcnZs95aaIdgyrRoCLY4QAvD_BwE">Deep Learning Specialization course</a>), " created by deeplearning.ai. \
          The course assignment was greatly inspired by ", (<a href="https://github.com/allanzelener/YAD2K">Yet Another Darknet 2 Keras project</a>, " by Allan Zelener. \
          YOLOv2 detects thousands of potential objects on the input image by specifying bounding box coordinates relative to image dimensions. \
          Thanks to non-max-suppression technique, Lambda outputs only the most probable predictions."],

    "4": "Due to considerable volume of machine learning libraries and model weights, all Lambda dependencies are stored on Amazon Elastic File System associated with the function.",

    "5": "Lambda returns the provided input image that has been marked with bouding boxes which represent detected objects. Each bounding box features a label that classifies the detected object. For safe web transport to the user, the image is again base64 encoded.",

    "6": "API Gateway via Amplify passes through the response generated by Lambda to the client browser."
  };
  
  const panelTitle = {
    "header": "DEMO object detection app",
    "1": "1 - Static website hosting on S3",
    "2": "2 - API Gateway call via Amplify",
    "3": "3 - API Lambda Proxy integration",
    "4": "4 - Lambda intergrated with EFS for machine learning inference",
    "5": "5 - Lambda integration response",
    "6": "6 - API Gateway response via Amplify"
  };
    
  const [title, setTitle] = useState(panelTitle["header"]);
  const [content, setContent] = useState(panelContent["header"]);

  function handleClick(event) {
    const num = event.name.toString();
    setTitle(panelTitle[num]);
    setContent(panelContent[num]);
  };



  return (
    <Grid >
      <Row className="row">
        <Col xs={6} md={4} className="col1">
          <p> Click on numbers on the diagram to learn more about the workflow.</p>
            <Panel bsStyle="danger" className="panel">
              <Panel.Heading>
                <Panel.Title componentClass="h3">
                  {title}

                </Panel.Title>
              </Panel.Heading>
              <Panel.Body>{content}</Panel.Body>
            </Panel>
        </Col>
        <Col xs={6} md={4}>
          <ImageMapper src={URL} map={MAP} width={794} onClick={handleClick}/>
        </Col>
      </Row>
    </Grid> 

    );
}