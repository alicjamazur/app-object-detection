{"ast":null,"code":"var _jsxFileName = \"/Users/alicjamazur/Desktop/work-in-progress/app-yolov2-client /src/containers/NewInference.js\";\nimport React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./NewInference.css\";\nimport { API } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nexport default function NewInference() {\n  const file = useRef(null);\n  const [result, setResult] = useState(null);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      await API.post(\"inference\", \"\", {\n        body: {\n          \"key\": \"value\"\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n      history.push(\"/result\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewInference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"imageFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ControlLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(FormControl, {\n    onChange: handleFileChange,\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    bsStyle: \"primary\",\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Detect\")));\n}","map":{"version":3,"sources":["/Users/alicjamazur/Desktop/work-in-progress/app-yolov2-client /src/containers/NewInference.js"],"names":["React","useRef","useState","useHistory","FormGroup","FormControl","ControlLabel","LoaderButton","config","API","onError","NewInference","file","result","setResult","history","isLoading","setIsLoading","handleFileChange","event","current","target","files","handleSubmit","preventDefault","post","body","then","response","json","data","console","log","push","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,YAAjC,QAAqD,iBAArD;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,oBAAP;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,eAAe,SAASC,YAAT,GAAwB;AACrC,QAAMC,IAAI,GAAGX,MAAM,CAAC,IAAD,CAAnB;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMa,OAAO,GAAGZ,UAAU,EAA1B;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;;AAGA,WAASgB,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/BP,IAAAA,IAAI,CAACQ,OAAL,GAAeD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAf;AACD;;AAED,iBAAeC,YAAf,CAA4BJ,KAA5B,EAAmC;AACjCA,IAAAA,KAAK,CAACK,cAAN;AAEAP,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACF,YAAMR,GAAG,CAACgB,IAAJ,CAAS,WAAT,EAAsB,EAAtB,EAA0B;AAC9BC,QAAAA,IAAI,EAAE;AAAC,iBAAO;AAAR;AADwB,OAA1B,EAELC,IAFK,CAEAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFZ,EAE6BF,IAF7B,CAEkCG,IAAI,IAAI;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAAkB,OAF7D,CAAN;AAKAf,MAAAA,OAAO,CAACkB,IAAR,CAAa,SAAb;AAED,KARD,CAQE,OAAOC,CAAP,EAAU;AACRxB,MAAAA,OAAO,CAACwB,CAAD,CAAP;AACAjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACJ;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEL,gBAAvB;AAAyC,IAAA,IAAI,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE,oBAAC,YAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,MAAM,EAAC,OAHT;AAIE,IAAA,OAAO,EAAC,SAJV;AAKE,IAAA,SAAS,EAAEF,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF,CADF;AAmBD","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./NewInference.css\";\nimport { API } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\n\nexport default function NewInference() {\n  const file = useRef(null);\n  const [result, setResult] = useState(null);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    setIsLoading(true);\n    \n    try {\n      await API.post(\"inference\", \"\", {\n        body: {\"key\": \"value\"}\n    }).then(response => response.json()).then(data => {console.log(data)});\n      \n      \n      history.push(\"/result\");\n        \n    } catch (e) {\n        onError(e);\n        setIsLoading(false);\n      }\n  }\n    \n  return (\n    <div className=\"NewInference\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"imageFile\">\n          <ControlLabel>Image</ControlLabel>\n          <FormControl onChange={handleFileChange} type=\"file\" />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          bsStyle=\"primary\"\n          isLoading={isLoading}\n        >\n          Detect\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}