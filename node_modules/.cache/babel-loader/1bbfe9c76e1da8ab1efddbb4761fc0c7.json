{"ast":null,"code":"var _jsxFileName = \"/Users/alicjamazur/Desktop/work-in-progress/app-yolov2-client /src/containers/Architecture.js\";\nimport React, { useRef, useState } from \"react\";\nimport { Button, ButtonToolbar } from \"react-bootstrap\";\nimport { Tooltip, OverlayTrigger, Overlay } from \"react-bootstrap\";\nimport { Popover } from \"react-bootstrap\";\nimport ImageMapper from 'react-image-mapper';\nimport \"./Architecture.css\";\nexport default function Architecture() {\n  const URL = \"https://demo-object-detection-app.s3.amazonaws.com/architecture3.png\";\n  const MAP = {\n    name: \"my-map\",\n    areas: [{\n      name: \"1\",\n      shape: \"circle\",\n      coords: [137, 58, 10],\n      strokeColor: \"green\"\n    }, {\n      name: \"2\",\n      shape: \"circle\",\n      coords: [247, 198.5, 10],\n      strokeColor: \"green\"\n    }, {\n      name: \"3\",\n      shape: \"circle\",\n      coords: [485, 198, 10],\n      strokeColor: \"green\"\n    }, {\n      name: \"4\",\n      shape: \"circle\",\n      coords: [621, 330.5, 10],\n      strokeColor: \"green\"\n    }, {\n      name: \"5\",\n      shape: \"circle\",\n      coords: [484, 259, 10],\n      strokeColor: \"green\"\n    }, {\n      name: \"6\",\n      shape: \"circle\",\n      coords: [250, 259, 10],\n      strokeColor: \"green\"\n    }]\n  };\n\n  function popover(pId) {\n    const popoverContent = {\n      p1: \"The browser downloads and stores the static content that forms this website.\",\n      p2: \"\",\n      p3: \"\",\n      p4: \"\",\n      p5: \"\",\n      p6: \"\",\n      p7: \"\"\n    };\n    const popoverTitle = {\n      p1: \"Static website hosting on S3\",\n      p2: \"\",\n      p3: \"\",\n      p4: \"\",\n      p5: \"\",\n      p6: \"\",\n      p7: \"\"\n    };\n    return /*#__PURE__*/React.createElement(Popover, {\n      id: pId,\n      title: popoverTitle.p1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, popoverContent.p1);\n  }\n\n  return /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"The app is built on top of serverless-stack bundle, a part of the open-source project developed by Anomaly Detection. The app leverages simplicity of React Bootstrap for the front-end. \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n    trigger: \"click\",\n    placement: \"right\",\n    overlay: popover(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ImageMapper, {\n    src: URL,\n    map: MAP,\n    width: 794,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }))));\n} // Popoover on the left upper corner\n// export default function Architecture() {\n//   const [show, setShow] = useState(false);\n//   const [target, setTarget] = useState(null);\n//   const ref = useRef(null);\n//   function handleClick(event) {\n//     setShow(!show);\n//     setTarget(event.target);\n//     console.log(\"Ref: \", ref.current);\n//     console.log(\"Target: \", event.target);\n//   }\n//   return (\n//     <body>\n//     <div  >\n//       <img class=\"image\" src={require(\"./architecture3.png\")}\n//             alt=\"App architecture\" \n//             height=\"562\"\n//             weight=\"644\"\n//             usemap=\"#image-map\">\n//       </img>\n// <map  name=\"image-map\">\n// <area ref={ref} target=\"_self\" alt=\"1\" onClick={handleClick}  href=\"#\" coords=\"133,58,20\" shape=\"circle\" />\n// <area ref={ref} target=\"_self\" alt=\"2\" title=\"2\" onClick={handleClick} href=\"#\" coords=\"247,198.5,20\" shape=\"circle\" />\n// </map>  \n//     </div>\n//     <div>\n//       <Overlay\n//         show={show}\n//         target={target}\n//         placement=\"bottom\"\n//         container={ref.current}\n//         containerPadding={0}\n//       >\n//         <Popover id=\"popover1\" title=\"Popover bottom\" >\n//           <strong>Holy guacamole!</strong>\n//         </Popover>\n//       </Overlay>\n//     </div>\n//     </body>\n//   );\n// }\n// This works\n// export default function Architecture() {\n//   const popoverLeft = (\n//     <Popover id=\"popover-positioned-left\" title=\"Popover left\">\n//       <strong>Holy guacamole!</strong> Check this info.\n//     </Popover>\n//   );\n//   return (\n//     <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popoverLeft}>\n//       <Button>Holy guacamole!</Button>\n//     </OverlayTrigger>\n//   );\n// }\n// export default function HowItWorks() {  \n// export default function Architecture() {\n//   const [show, setShow] = useState(false);\n//   const [target, setTarget] = useState(null);\n//   const ref = useRef(null);\n//   function handleClick(event) {\n//     setShow(!show);\n//     setTarget(event.target);\n//     // console.log(event.target);\n//     // alert(\"Hello\");\n//   };\n//   return (\n//     <div ref={ref}>\n//       <Button onClick={handleClick}>Holy guacamole!</Button>\n//       <Overlay\n//         show={show}\n//         target={target}\n//         placement=\"bottom\"\n//         container={ref.current}\n//         containerPadding={20}\n//       >\n//       </Overlay> */}\n//      </div>\n//   );\n// }\n// <h5> Click on a number to learn more on the workflow. </h5>\n//       <img class=\"image\" src={require(\"./architecture3.png\")}\n//           alt=\"App architecture\" \n//           height=\"562\"\n//           weight=\"644\"\n//           usemap=\"#image-map\">\n//       </img>\n// <map name=\"image-map\">\n//       <area target=\"_self\"  id=\"popover1\" alt=\"1\" title=\"1\" onClick={handleClick} href=\"#\" coords=\"133,58,20\" shape=\"circle\" />\n//       </map>\n// <area target=\"_blank\" alt=\"2\" title=\"2\" href=\"#\" coords=\"247,198.5,20\" shape=\"circle\" />\n//       <area target=\"_blank\" alt=\"3\" title=\"3\" href=\"3\" coords=\"485,198.5,20\" shape=\"circle\" />\n//       <area target=\"_blank\" alt=\"4\" title=\"4\" href=\"4\" coords=\"621,330.5,20\" shape=\"circle\" />\n//       <area target=\"_blank\" alt=\"5\" title=\"5\" href=\"5\" coords=\"484,259,20\" shape=\"circle\" />\n//       <area target=\"_blank\" alt=\"6\" title=\"6\" href=\"6\" coords=\"250,259,20\" shape=\"circle\" />","map":{"version":3,"sources":["/Users/alicjamazur/Desktop/work-in-progress/app-yolov2-client /src/containers/Architecture.js"],"names":["React","useRef","useState","Button","ButtonToolbar","Tooltip","OverlayTrigger","Overlay","Popover","ImageMapper","Architecture","URL","MAP","name","areas","shape","coords","strokeColor","popover","pId","popoverContent","p1","p2","p3","p4","p5","p6","p7","popoverTitle"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Button, ButtonToolbar } from \"react-bootstrap\";\nimport { Tooltip, OverlayTrigger, Overlay } from \"react-bootstrap\";\nimport { Popover } from \"react-bootstrap\";\nimport ImageMapper from 'react-image-mapper';\n\nimport \"./Architecture.css\";\n\nexport default function Architecture() {\n\n  const URL = \"https://demo-object-detection-app.s3.amazonaws.com/architecture3.png\"\n  \n  const MAP = {\n    name: \"my-map\",\n    areas: [\n      { name: \"1\", shape: \"circle\", coords: [137,58,10], strokeColor: \"green\" },\n      { name: \"2\", shape: \"circle\", coords: [247,198.5,10], strokeColor: \"green\"  },\n      { name: \"3\", shape: \"circle\", coords: [485,198,10], strokeColor: \"green\"  },\n      { name: \"4\", shape: \"circle\", coords: [621,330.5,10], strokeColor: \"green\"  },\n      { name: \"5\", shape: \"circle\", coords: [484,259,10], strokeColor: \"green\" },\n      { name: \"6\", shape: \"circle\", coords: [250,259,10], strokeColor: \"green\" },\n\n    ]\n  }\n\nfunction popover(pId) {\n\n  const popoverContent = {\n    p1: \"The browser downloads and stores the static content that forms this website.\",\n    p2: \"\",\n    p3: \"\",\n    p4: \"\",\n    p5: \"\",\n    p6: \"\",\n    p7: \"\"\n  };\n\n  const popoverTitle = {\n    p1: \"Static website hosting on S3\",\n    p2: \"\",\n    p3: \"\",\n    p4: \"\",\n    p5: \"\",\n    p6: \"\",\n    p7: \"\"\n  };\n\n  return (\n    <Popover id={pId} title={popoverTitle.p1} >\n      {popoverContent.p1}\n    </Popover>\n  );\n}\n\n\n  return (\n    <body>\n      <p>The app is built on top of serverless-stack bundle, a part of the open-source project developed by Anomaly Detection. \n      The app leverages simplicity of React Bootstrap for the front-end. </p>\n      <div className=\"image\">\n        <OverlayTrigger  trigger=\"click\" placement=\"right\" overlay={popover(1)}>\n          <ImageMapper src={URL} map={MAP} width={794}/>\n        </OverlayTrigger>\n      </div>\n    </body>\n  );\n}\n\n\n// Popoover on the left upper corner\n// export default function Architecture() {\n\n//   const [show, setShow] = useState(false);\n//   const [target, setTarget] = useState(null);\n//   const ref = useRef(null);\n\n//   function handleClick(event) {\n//     setShow(!show);\n//     setTarget(event.target);\n//     console.log(\"Ref: \", ref.current);\n//     console.log(\"Target: \", event.target);\n\n//   }\n\n\n//   return (\n//     <body>\n//     <div  >\n//       <img class=\"image\" src={require(\"./architecture3.png\")}\n//             alt=\"App architecture\" \n//             height=\"562\"\n//             weight=\"644\"\n//             usemap=\"#image-map\">\n//       </img>\n      // <map  name=\"image-map\">\n      // <area ref={ref} target=\"_self\" alt=\"1\" onClick={handleClick}  href=\"#\" coords=\"133,58,20\" shape=\"circle\" />\n      // <area ref={ref} target=\"_self\" alt=\"2\" title=\"2\" onClick={handleClick} href=\"#\" coords=\"247,198.5,20\" shape=\"circle\" />\n      // </map>  \n\n//     </div>\n//     <div>\n      \n//       <Overlay\n//         show={show}\n//         target={target}\n//         placement=\"bottom\"\n//         container={ref.current}\n//         containerPadding={0}\n//       >\n//         <Popover id=\"popover1\" title=\"Popover bottom\" >\n//           <strong>Holy guacamole!</strong>\n//         </Popover>\n//       </Overlay>\n//     </div>\n//     </body>\n//   );\n// }\n\n\n// This works\n// export default function Architecture() {\n \n//   const popoverLeft = (\n//     <Popover id=\"popover-positioned-left\" title=\"Popover left\">\n//       <strong>Holy guacamole!</strong> Check this info.\n//     </Popover>\n//   );\n  \n//   return (\n//     <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popoverLeft}>\n//       <Button>Holy guacamole!</Button>\n//     </OverlayTrigger>\n\n//   );\n// }\n\n// export default function HowItWorks() {  \n\n// export default function Architecture() {\n//   const [show, setShow] = useState(false);\n//   const [target, setTarget] = useState(null);\n//   const ref = useRef(null);\n\n//   function handleClick(event) {\n  \n//     setShow(!show);\n//     setTarget(event.target);\n//     // console.log(event.target);\n//     // alert(\"Hello\");\n//   };\n\n//   return (\n//     <div ref={ref}>\n//       <Button onClick={handleClick}>Holy guacamole!</Button>\n\n//       <Overlay\n//         show={show}\n//         target={target}\n//         placement=\"bottom\"\n//         container={ref.current}\n//         containerPadding={20}\n        \n//       >\n  \n//       </Overlay> */}\n      \n//      </div>\n//   );\n// }\n\n\n\n\n  // <h5> Click on a number to learn more on the workflow. </h5>\n  //       <img class=\"image\" src={require(\"./architecture3.png\")}\n  //           alt=\"App architecture\" \n  //           height=\"562\"\n  //           weight=\"644\"\n  //           usemap=\"#image-map\">\n  //       </img>\n  // <map name=\"image-map\">\n  //       <area target=\"_self\"  id=\"popover1\" alt=\"1\" title=\"1\" onClick={handleClick} href=\"#\" coords=\"133,58,20\" shape=\"circle\" />\n  //       </map>\n\n  // <area target=\"_blank\" alt=\"2\" title=\"2\" href=\"#\" coords=\"247,198.5,20\" shape=\"circle\" />\n  //       <area target=\"_blank\" alt=\"3\" title=\"3\" href=\"3\" coords=\"485,198.5,20\" shape=\"circle\" />\n  //       <area target=\"_blank\" alt=\"4\" title=\"4\" href=\"4\" coords=\"621,330.5,20\" shape=\"circle\" />\n  //       <area target=\"_blank\" alt=\"5\" title=\"5\" href=\"5\" coords=\"484,259,20\" shape=\"circle\" />\n  //       <area target=\"_blank\" alt=\"6\" title=\"6\" href=\"6\" coords=\"250,259,20\" shape=\"circle\" />\n\n"]},"metadata":{},"sourceType":"module"}