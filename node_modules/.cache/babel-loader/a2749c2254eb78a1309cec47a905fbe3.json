{"ast":null,"code":"import _slicedToArray from\"/Users/alicjamazur/Desktop/projects/app-object-detection/web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Panel,Col,Row,Grid}from\"react-bootstrap\";import ImageMapper from'react-image-mapper';import\"./Architecture.css\";export default function Architecture(){var URL=\"https://demo-object-detection-app.s3.amazonaws.com/architecture3.png\";var MAP={name:\"my-map\",areas:[{name:\"1\",shape:\"circle\",coords:[133,59,10],strokeColor:\"red\"},{name:\"2\",shape:\"circle\",coords:[247,197.5,10],strokeColor:\"red\"},{name:\"3\",shape:\"circle\",coords:[484,198,10],strokeColor:\"red\"},{name:\"4\",shape:\"circle\",coords:[620,331,10],strokeColor:\"red\"},{name:\"5\",shape:\"circle\",coords:[485,259,10],strokeColor:\"red\"},{name:\"6\",shape:\"circle\",coords:[248,259,10],strokeColor:\"red\"}]};var panelContent={\"header\":[\"The back-end is built on top of Serverless Node.js Starter, a part of \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://serverless-stack.com\"},\"Serverless Stack\"),\", an open-source project developed by Anomaly Innovations. \\\n                They created a step-by-step guide to help you build a full-stack serverless application hosted on AWS. \\n \\\n                The front-end is a single page app build on top of \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://github.com/facebook/create-react-app\"},\"Create React App project\"),\" developed by Facebook.\"],\"1\":\"The browser downloads and stores the static content that forms this website. \\\n          The user interface is built with React.js, while the untime environment uses Node.js platform. \\\n          Open-source AWS framework Amplify is used to make API calls.\",\"2\":\"Within a click of a button the uploaded image is base64 encoded for safe transport through the web \\\n          and AWS Amplify makes a REST API call to API Gateway, which is set up as Lambda Proxy integration.\",\"3\":[\"API Gateway invokes Lambda function that hosts Python code used to make machine learning inference. \\\n          The inference code was written by me during \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://www.coursera.org/specializations/deep-learning\"},\"the Deep Learning Specialization course\"),\" and it is greatly inspired by \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://github.com/allanzelener/YAD2K\"},\"this\"),\" project by Allan Zelener. \",\"To make predictions I use trained machine learning model \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://pjreddie.com/darknet/yolov2/\"},\"YOLOv2\"),\", authored by Joseph Redmon. \\\n          YOLOv2 detects thousands of potential objects on the input image by specifying bounding box coordinates relative to image dimensions. \\\n          Thanks to non-max-suppression technique, Lambda outputs only the most probable predictions.\"],\"4\":\"Due to bulky both model weights and library dependencies, Amazon EFS is used to extend Lambda storage space.\",\"5\":\"Lambda returns the input image with drawn bounding boxes and marked labels to indicate predicted objects. For safe web transport to the user, the image is again base64 encoded.\",\"6\":\"API Gateway passes the response generated by Lambda to the client browser.\"};var panelTitle={\"header\":\"DEMO object detection app\",\"1\":\"1 - Static website hosting on S3\",\"2\":\"2 - API Gateway call via Amplify\",\"3\":\"3 - API Lambda Proxy integration\",\"4\":\"4 - Lambda intergrated with EFS for machine learning inference\",\"5\":\"5 - Lambda integration response\",\"6\":\"6 - API Gateway response via Amplify\"};var _useState=useState(panelTitle[\"header\"]),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(panelContent[\"header\"]),_useState4=_slicedToArray(_useState3,2),content=_useState4[0],setContent=_useState4[1];function handleClick(event){var num=event.name.toString();setTitle(panelTitle[num]);setContent(panelContent[num]);};return/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(Row,{className:\"row\"},/*#__PURE__*/React.createElement(Col,{xs:6,md:4,className:\"col1\"},/*#__PURE__*/React.createElement(\"p\",null,\" Click on numbers on the diagram to learn more on the workflow.\"),/*#__PURE__*/React.createElement(Panel,{bsStyle:\"danger\",className:\"panel\"},/*#__PURE__*/React.createElement(Panel.Heading,null,/*#__PURE__*/React.createElement(Panel.Title,{componentClass:\"h3\"},title)),/*#__PURE__*/React.createElement(Panel.Body,null,content))),/*#__PURE__*/React.createElement(Col,{xs:6,md:4},/*#__PURE__*/React.createElement(ImageMapper,{src:URL,map:MAP,width:794,onClick:handleClick}))));}{/* <div className=\"image\">\n        <OverlayTrigger trigger=\"click\" placement=\"right\" onClick={handleClick} overlay={choosePopover()}>\n          \n        </OverlayTrigger>\n        <div> */}// Popoover on the left upper corner\n// export default function Architecture() {\n//   const [show, setShow] = useState(false);\n//   const [target, setTarget] = useState(null);\n//   const ref = useRef(null);\n//   function handleClick(event) {\n//     setShow(!show);\n//     setTarget(event.target);\n//     console.log(\"Ref: \", ref.current);\n//     console.log(\"Target: \", event.target);\n//   }\n//   return (\n//     <body>\n//     <div  >\n//       <img class=\"image\" src={require(\"./architecture3.png\")}\n//             alt=\"App architecture\" \n//             height=\"562\"\n//             weight=\"644\"\n//             usemap=\"#image-map\">\n//       </img>\n// <map  name=\"image-map\">\n// <area ref={ref} target=\"_self\" alt=\"1\" onClick={handleClick}  href=\"#\" coords=\"133,58,20\" shape=\"circle\" />\n// <area ref={ref} target=\"_self\" alt=\"2\" title=\"2\" onClick={handleClick} href=\"#\" coords=\"247,198.5,20\" shape=\"circle\" />\n// </map>  \n//     </div>\n//     <div>\n//       <Overlay\n//         show={show}\n//         target={target}\n//         placement=\"bottom\"\n//         container={ref.current}\n//         containerPadding={0}\n//       >\n//         <Popover id=\"popover1\" title=\"Popover bottom\" >\n//           <strong>Holy guacamole!</strong>\n//         </Popover>\n//       </Overlay>\n//     </div>\n//     </body>\n//   );\n// }\n// This works\n// export default function Architecture() {\n//   const popoverLeft = (\n//     <Popover id=\"popover-positioned-left\" title=\"Popover left\">\n//       <strong>Holy guacamole!</strong> Check this info.\n//     </Popover>\n//   );\n//   return (\n//     <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popoverLeft}>\n//       <Button>Holy guacamole!</Button>\n//     </OverlayTrigger>\n//   );\n// }\n// export default function HowItWorks() {  \n// export default function Architecture() {\n//   const [show, setShow] = useState(false);\n//   const [target, setTarget] = useState(null);\n//   const ref = useRef(null);\n//   function handleClick(event) {\n//     setShow(!show);\n//     setTarget(event.target);\n//     // console.log(event.target);\n//     // alert(\"Hello\");\n//   };\n//   return (\n//     <div ref={ref}>\n//       <Button onClick={handleClick}>Holy guacamole!</Button>\n//       <Overlay\n//         show={show}\n//         target={target}\n//         placement=\"bottom\"\n//         container={ref.current}\n//         containerPadding={20}\n//       >\n//       </Overlay> */}\n//      </div>\n//   );\n// }\n// <h5> Click on a number to learn more on the workflow. </h5>\n//       <img class=\"image\" src={require(\"./architecture3.png\")}\n//           alt=\"App architecture\" \n//           height=\"562\"\n//           weight=\"644\"\n//           usemap=\"#image-map\">\n//       </img>\n// <map name=\"image-map\">\n//       <area target=\"_self\"  id=\"popover1\" alt=\"1\" title=\"1\" onClick={handleClick} href=\"#\" coords=\"133,58,20\" shape=\"circle\" />\n//       </map>\n// <area target=\"_blank\" alt=\"2\" title=\"2\" href=\"#\" coords=\"247,198.5,20\" shape=\"circle\" />\n//       <area target=\"_blank\" alt=\"3\" title=\"3\" href=\"3\" coords=\"485,198.5,20\" shape=\"circle\" />\n//       <area target=\"_blank\" alt=\"4\" title=\"4\" href=\"4\" coords=\"621,330.5,20\" shape=\"circle\" />\n//       <area target=\"_blank\" alt=\"5\" title=\"5\" href=\"5\" coords=\"484,259,20\" shape=\"circle\" />\n//       <area target=\"_blank\" alt=\"6\" title=\"6\" href=\"6\" coords=\"250,259,20\" shape=\"circle\" />","map":{"version":3,"sources":["/Users/alicjamazur/Desktop/projects/app-object-detection/web-app/src/containers/Architecture.js"],"names":["React","useState","Panel","Col","Row","Grid","ImageMapper","Architecture","URL","MAP","name","areas","shape","coords","strokeColor","panelContent","panelTitle","title","setTitle","content","setContent","handleClick","event","num","toString"],"mappings":"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AAE,CAAT,CAAY,EAAE,CAAE,CAAhB,eACE,oBAAC,WAAD,EAAa,GAAG,CAAEX,GAAlB,CAAuB,GAAG,CAAEC,GAA5B,CAAiC,KAAK,CAAE,GAAxC,CAA6C,OAAO,CAAEY,WAAtD,EADF,CAbF,CADF,CADF,CAuBD,CAEI,CAAC;;;;gBAIW,CAGjB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM;AACA;AACA;AACA;AAEN;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAKE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport { Panel, Col, Row, Grid } from \"react-bootstrap\";\nimport ImageMapper from 'react-image-mapper';\n\nimport \"./Architecture.css\";\n\nexport default function Architecture() {\n\n  const URL = \"https://demo-object-detection-app.s3.amazonaws.com/architecture3.png\";\n  \n  const MAP = {\n    name: \"my-map\",\n    areas: [\n      { name: \"1\", shape: \"circle\", coords: [133,59,10], strokeColor: \"red\" },\n      { name: \"2\", shape: \"circle\", coords: [247,197.5,10], strokeColor: \"red\"  },\n      { name: \"3\", shape: \"circle\", coords: [484,198,10], strokeColor: \"red\"  },\n      { name: \"4\", shape: \"circle\", coords: [620,331,10], strokeColor: \"red\"  },\n      { name: \"5\", shape: \"circle\", coords: [485,259,10], strokeColor: \"red\" },\n      { name: \"6\", shape: \"circle\", coords: [248,259,10], strokeColor: \"red\" },\n    ]\n  };\n\n\n  const panelContent = {\n    \"header\": [\"The back-end is built on top of Serverless Node.js Starter, a part of \", (<a href=\"https://serverless-stack.com\">Serverless Stack</a>), \", an open-source project developed by Anomaly Innovations. \\\n                They created a step-by-step guide to help you build a full-stack serverless application hosted on AWS. \\n \\\n                The front-end is a single page app build on top of \", (<a href=\"https://github.com/facebook/create-react-app\">Create React App project</a>), \" developed by Facebook.\"],\n\n    \"1\": \"The browser downloads and stores the static content that forms this website. \\\n          The user interface is built with React.js, while the untime environment uses Node.js platform. \\\n          Open-source AWS framework Amplify is used to make API calls.\",\n          \n    \"2\": \"Within a click of a button the uploaded image is base64 encoded for safe transport through the web \\\n          and AWS Amplify makes a REST API call to API Gateway, which is set up as Lambda Proxy integration.\",\n\n    \"3\": [\"API Gateway invokes Lambda function that hosts Python code used to make machine learning inference. \\\n          The inference code was written by me during \", (<a href=\"https://www.coursera.org/specializations/deep-learning\">the Deep Learning Specialization course</a>), \" and it is greatly inspired by \", (<a href=\"https://github.com/allanzelener/YAD2K\">this</a>), \" project by Allan Zelener. \", \n          \"To make predictions I use trained machine learning model \", (<a href=\"https://pjreddie.com/darknet/yolov2/\">YOLOv2</a>), \", authored by Joseph Redmon. \\\n          YOLOv2 detects thousands of potential objects on the input image by specifying bounding box coordinates relative to image dimensions. \\\n          Thanks to non-max-suppression technique, Lambda outputs only the most probable predictions.\"],\n\n    \"4\": \"Due to bulky both model weights and library dependencies, Amazon EFS is used to extend Lambda storage space.\",\n\n    \"5\": \"Lambda returns the input image with drawn bounding boxes and marked labels to indicate predicted objects. For safe web transport to the user, the image is again base64 encoded.\",\n\n    \"6\": \"API Gateway passes the response generated by Lambda to the client browser.\"\n  };\n  \n  const panelTitle = {\n    \"header\": \"DEMO object detection app\",\n    \"1\": \"1 - Static website hosting on S3\",\n    \"2\": \"2 - API Gateway call via Amplify\",\n    \"3\": \"3 - API Lambda Proxy integration\",\n    \"4\": \"4 - Lambda intergrated with EFS for machine learning inference\",\n    \"5\": \"5 - Lambda integration response\",\n    \"6\": \"6 - API Gateway response via Amplify\"\n  };\n    \n  const [title, setTitle] = useState(panelTitle[\"header\"]);\n  const [content, setContent] = useState(panelContent[\"header\"]);\n\n  function handleClick(event) {\n    const num = event.name.toString();\n    setTitle(panelTitle[num]);\n    setContent(panelContent[num]);\n  };\n\n\n\n  return (\n    <Grid >\n      <Row className=\"row\">\n        <Col xs={6} md={4} className=\"col1\">\n          <p> Click on numbers on the diagram to learn more on the workflow.</p>\n            <Panel bsStyle=\"danger\" className=\"panel\">\n              <Panel.Heading>\n                <Panel.Title componentClass=\"h3\">\n                  {title}\n\n                </Panel.Title>\n              </Panel.Heading>\n              <Panel.Body>{content}</Panel.Body>\n            </Panel>\n        </Col>\n        <Col xs={6} md={4}>\n          <ImageMapper src={URL} map={MAP} width={794} onClick={handleClick}/>\n        </Col>\n      </Row>\n    </Grid> \n\n\n    );\n}\n\n     {/* <div className=\"image\">\n        <OverlayTrigger trigger=\"click\" placement=\"right\" onClick={handleClick} overlay={choosePopover()}>\n          \n        </OverlayTrigger>\n        <div> */}\n\n\n// Popoover on the left upper corner\n// export default function Architecture() {\n\n//   const [show, setShow] = useState(false);\n//   const [target, setTarget] = useState(null);\n//   const ref = useRef(null);\n\n//   function handleClick(event) {\n//     setShow(!show);\n//     setTarget(event.target);\n//     console.log(\"Ref: \", ref.current);\n//     console.log(\"Target: \", event.target);\n\n//   }\n\n\n//   return (\n//     <body>\n//     <div  >\n//       <img class=\"image\" src={require(\"./architecture3.png\")}\n//             alt=\"App architecture\" \n//             height=\"562\"\n//             weight=\"644\"\n//             usemap=\"#image-map\">\n//       </img>\n      // <map  name=\"image-map\">\n      // <area ref={ref} target=\"_self\" alt=\"1\" onClick={handleClick}  href=\"#\" coords=\"133,58,20\" shape=\"circle\" />\n      // <area ref={ref} target=\"_self\" alt=\"2\" title=\"2\" onClick={handleClick} href=\"#\" coords=\"247,198.5,20\" shape=\"circle\" />\n      // </map>  \n\n//     </div>\n//     <div>\n      \n//       <Overlay\n//         show={show}\n//         target={target}\n//         placement=\"bottom\"\n//         container={ref.current}\n//         containerPadding={0}\n//       >\n//         <Popover id=\"popover1\" title=\"Popover bottom\" >\n//           <strong>Holy guacamole!</strong>\n//         </Popover>\n//       </Overlay>\n//     </div>\n//     </body>\n//   );\n// }\n\n\n// This works\n// export default function Architecture() {\n \n//   const popoverLeft = (\n//     <Popover id=\"popover-positioned-left\" title=\"Popover left\">\n//       <strong>Holy guacamole!</strong> Check this info.\n//     </Popover>\n//   );\n  \n//   return (\n//     <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popoverLeft}>\n//       <Button>Holy guacamole!</Button>\n//     </OverlayTrigger>\n\n//   );\n// }\n\n// export default function HowItWorks() {  \n\n// export default function Architecture() {\n//   const [show, setShow] = useState(false);\n//   const [target, setTarget] = useState(null);\n//   const ref = useRef(null);\n\n//   function handleClick(event) {\n  \n//     setShow(!show);\n//     setTarget(event.target);\n//     // console.log(event.target);\n//     // alert(\"Hello\");\n//   };\n\n//   return (\n//     <div ref={ref}>\n//       <Button onClick={handleClick}>Holy guacamole!</Button>\n\n//       <Overlay\n//         show={show}\n//         target={target}\n//         placement=\"bottom\"\n//         container={ref.current}\n//         containerPadding={20}\n        \n//       >\n  \n//       </Overlay> */}\n      \n//      </div>\n//   );\n// }\n\n\n\n\n  // <h5> Click on a number to learn more on the workflow. </h5>\n  //       <img class=\"image\" src={require(\"./architecture3.png\")}\n  //           alt=\"App architecture\" \n  //           height=\"562\"\n  //           weight=\"644\"\n  //           usemap=\"#image-map\">\n  //       </img>\n  // <map name=\"image-map\">\n  //       <area target=\"_self\"  id=\"popover1\" alt=\"1\" title=\"1\" onClick={handleClick} href=\"#\" coords=\"133,58,20\" shape=\"circle\" />\n  //       </map>\n\n  // <area target=\"_blank\" alt=\"2\" title=\"2\" href=\"#\" coords=\"247,198.5,20\" shape=\"circle\" />\n  //       <area target=\"_blank\" alt=\"3\" title=\"3\" href=\"3\" coords=\"485,198.5,20\" shape=\"circle\" />\n  //       <area target=\"_blank\" alt=\"4\" title=\"4\" href=\"4\" coords=\"621,330.5,20\" shape=\"circle\" />\n  //       <area target=\"_blank\" alt=\"5\" title=\"5\" href=\"5\" coords=\"484,259,20\" shape=\"circle\" />\n  //       <area target=\"_blank\" alt=\"6\" title=\"6\" href=\"6\" coords=\"250,259,20\" shape=\"circle\" />\n\n"]},"metadata":{},"sourceType":"module"}