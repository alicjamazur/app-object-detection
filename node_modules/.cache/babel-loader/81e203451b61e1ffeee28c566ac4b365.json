{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRequest = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nfunction createRequest(client, command) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var interceptMiddleware, clientStack, handler;\n\n    var _this = this;\n\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          interceptMiddleware = function (next) {\n            return function (args) {\n              return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                  return [2\n                  /*return*/\n                  , {\n                    output: {\n                      request: args.request\n                    },\n                    response: undefined\n                  }];\n                });\n              });\n            };\n          };\n\n          clientStack = client.middlewareStack.clone(); //add middleware to the last of 'build' step\n\n          clientStack.add(interceptMiddleware, {\n            step: \"build\",\n            priority: \"low\"\n          });\n          handler = command.resolveMiddleware(clientStack, client.config, undefined);\n          return [4\n          /*yield*/\n          , handler(command).then(function (output) {\n            return output.output.request;\n          })];\n\n        case 1:\n          //@ts-ignore\n          return [2\n          /*return*/\n          , _a.sent()];\n      }\n    });\n  });\n}\n\nexports.createRequest = createRequest;","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;;;;AAIA,SAAsB,aAAtB,CAKE,MALF,EAME,OANF,EAM+E;;;;;;;;;AAGvE,UAAA,mBAAmB,GAA2C,UAAC,IAAD,EAAK;AAAK,mBAAA,UAAO,IAAP,EAAW;AAAA,qBAAA,OAAA,CAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;AACvF,yBAAA,CAAA;AAAA;AAAA,oBAAO;AAAE,oBAAA,MAAM,EAAE;AAAE,sBAAA,OAAO,EAAE,IAAI,CAAC;AAAhB,qBAAV;AAA4C,oBAAA,QAAQ,EAAE;AAAtD,mBAAP,CAAA;;eADuF,CAAA;AAAX,aAAA;AAE7E,WAFK;;AAGA,UAAA,WAAW,GAAG,MAAM,CAAC,eAAP,CAAuB,KAAvB,EAAd,C,CAEN;;AACA,UAAA,WAAW,CAAC,GAAZ,CAAgB,mBAAhB,EAAqC;AACnC,YAAA,IAAI,EAAE,OAD6B;AAEnC,YAAA,QAAQ,EAAE;AAFyB,WAArC;AAKM,UAAA,OAAO,GAAG,OAAO,CAAC,iBAAR,CAA0B,WAA1B,EAAoE,MAAM,CAAC,MAA3E,EAAmF,SAAnF,CAAV;AAGC,iBAAA,CAAA;AAAA;AAAA,YAAM,OAAO,CAAC,OAAD,CAAP,CAAiB,IAAjB,CAAsB,UAAC,MAAD,EAAO;AAAK,mBAAA,MAAM,CAAC,MAAP,CAAA,OAAA;AAAqB,WAAvD,CAAN,CAAA;;;AADP;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;AACD;;AAxBD,OAAA,CAAA,aAAA,GAAA,aAAA","sourcesContent":["import { MiddlewareStack } from \"@aws-sdk/middleware-stack\";\nimport { Client, Command } from \"@aws-sdk/smithy-client\";\nimport { BuildMiddleware, HttpRequest, MetadataBearer } from \"@aws-sdk/types\";\n\nexport async function createRequest<\n  InputTypesUnion extends object,\n  InputType extends InputTypesUnion,\n  OutputType extends MetadataBearer = MetadataBearer\n>(\n  client: Client<any, InputTypesUnion, MetadataBearer, any>,\n  command: Command<InputType, OutputType, any, InputTypesUnion, MetadataBearer>\n): Promise<HttpRequest> {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const interceptMiddleware: BuildMiddleware<InputType, OutputType> = (next) => async (args) => {\n    return { output: { request: args.request } as any, response: undefined };\n  };\n  const clientStack = client.middlewareStack.clone();\n\n  //add middleware to the last of 'build' step\n  clientStack.add(interceptMiddleware, {\n    step: \"build\",\n    priority: \"low\",\n  });\n\n  const handler = command.resolveMiddleware(clientStack as MiddlewareStack<any, any>, client.config, undefined);\n\n  //@ts-ignore\n  return await handler(command).then((output) => output.output.request);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}