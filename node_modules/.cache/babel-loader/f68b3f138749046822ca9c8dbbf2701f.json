{"ast":null,"code":"var _jsxFileName = \"/Users/alicjamazur/Desktop/work-in-progress/app-yolov2-client /src/containers/Result.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { API, Storage } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./Notes.css\";\nimport { s3Upload } from \"../libs/awsLib\";\nexport default function Notes() {\n  const file = useRef(null);\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [note, setNote] = useState(null);\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  useEffect(() => {\n    function loadNote() {\n      return API.get(\"notes\", `/notes/${id}`);\n    }\n\n    async function onLoad() {\n      try {\n        const note = await loadNote();\n        const {\n          content,\n          attachment\n        } = note;\n\n        if (attachment) {\n          note.attachmentURL = await Storage.vault.get(attachment);\n        }\n\n        setContent(content);\n        setNote(note);\n      } catch (e) {\n        onError(e);\n      }\n    }\n\n    onLoad();\n  }, [id]);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function formatFilename(str) {\n    return str.replace(/^\\w+-/, \"\");\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  function saveNote(note) {\n    return API.put(\"notes\", `/notes/${id}`, {\n      body: note\n    });\n  }\n\n  function saveNote(note) {\n    return API.put(\"notes\", `/notes/${id}`, {\n      body: note\n    });\n  }\n\n  async function handleSubmit(event) {\n    let attachment;\n    event.preventDefault();\n\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(`Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE / 1000000} MB.`);\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      if (file.current) {\n        attachment = await s3Upload(file.current);\n      }\n\n      await saveNote({\n        content,\n        attachment: attachment || note.attachment\n      });\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  function deleteNote() {\n    return API.del(\"notes\", `/notes/${id}`);\n  }\n\n  async function handleDelete(event) {\n    event.preventDefault();\n    const confirmed = window.confirm(\"Are you sure you want to delete this note?\");\n\n    if (!confirmed) {\n      return;\n    }\n\n    setIsDeleting(true);\n\n    try {\n      await deleteNote();\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsDeleting(false);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, note && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    value: content,\n    componentClass: \"textarea\",\n    onChange: e => setContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  })), note.attachment && /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ControlLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, \"Attachment\"), /*#__PURE__*/React.createElement(FormControl.Static, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: note.attachmentURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, formatFilename(note.attachment)))), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, !note.attachment && /*#__PURE__*/React.createElement(ControlLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 34\n    }\n  }, \"Attachment\"), /*#__PURE__*/React.createElement(FormControl, {\n    onChange: handleFileChange,\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    bsStyle: \"primary\",\n    isLoading: isLoading,\n    disabled: !validateForm(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(LoaderButton, {\n    block: true,\n    bsSize: \"large\",\n    bsStyle: \"danger\",\n    onClick: handleDelete,\n    isLoading: isDeleting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \"Delete\")));\n}","map":{"version":3,"sources":["/Users/alicjamazur/Desktop/work-in-progress/app-yolov2-client /src/containers/Result.js"],"names":["React","useRef","useState","useEffect","useParams","useHistory","API","Storage","onError","FormGroup","FormControl","ControlLabel","LoaderButton","config","s3Upload","Notes","file","id","history","note","setNote","content","setContent","isLoading","setIsLoading","isDeleting","setIsDeleting","loadNote","get","onLoad","attachment","attachmentURL","vault","e","validateForm","length","formatFilename","str","replace","handleFileChange","event","current","target","files","saveNote","put","body","handleSubmit","preventDefault","size","MAX_ATTACHMENT_SIZE","alert","push","deleteNote","del","handleDelete","confirmed","window","confirm","value"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { API, Storage } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./Notes.css\";\nimport { s3Upload } from \"../libs/awsLib\";\n\nexport default function Notes() {\n  const file = useRef(null);\n  const { id } = useParams();\n  const history = useHistory();\n  const [note, setNote] = useState(null);\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);    \n\n  useEffect(() => {\n    function loadNote() {\n      return API.get(\"notes\", `/notes/${id}`);\n    }\n\n    async function onLoad() {\n      try {\n        const note = await loadNote();\n        const { content, attachment } = note;\n\n        if (attachment) {\n          note.attachmentURL = await Storage.vault.get(attachment);\n        }\n\n        setContent(content);\n        setNote(note);\n      } catch (e) {\n        onError(e);\n      }\n    }\n\n    onLoad();\n  }, [id]);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n  \n  function formatFilename(str) {\n    return str.replace(/^\\w+-/, \"\");\n  }\n  \n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n  \n  function saveNote(note) {\n    return API.put(\"notes\", `/notes/${id}`, {\n        body: note\n    });\n  }\n  \n  function saveNote(note) {\n    return API.put(\"notes\", `/notes/${id}`, {\n      body: note\n    });\n  }\n  \n  async function handleSubmit(event) {\n    let attachment;\n  \n    event.preventDefault();\n  \n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(\n        `Please pick a file smaller than ${\n          config.MAX_ATTACHMENT_SIZE / 1000000\n        } MB.`\n      );\n      return;\n    }\n  \n    setIsLoading(true);\n  \n    try {\n      if (file.current) {\n        attachment = await s3Upload(file.current);\n      }\n  \n      await saveNote({\n        content,\n        attachment: attachment || note.attachment\n      });\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n  \n  function deleteNote() {\n    return API.del(\"notes\", `/notes/${id}`);\n  }\n  \n  async function handleDelete(event) {\n    event.preventDefault();\n  \n    const confirmed = window.confirm(\n      \"Are you sure you want to delete this note?\"\n    );\n  \n    if (!confirmed) {\n      return;\n    }\n  \n    setIsDeleting(true);\n  \n    try {\n      await deleteNote();\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsDeleting(false);\n    }\n  }\n  \n  return (\n    <div className=\"Notes\">\n      {note && (\n        <form onSubmit={handleSubmit}>\n          <FormGroup controlId=\"content\">\n            <FormControl\n              value={content}\n              componentClass=\"textarea\"\n              onChange={e => setContent(e.target.value)}\n            />\n          </FormGroup>\n          {note.attachment && (\n            <FormGroup>\n              <ControlLabel>Attachment</ControlLabel>\n              <FormControl.Static>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={note.attachmentURL}\n                >\n                  {formatFilename(note.attachment)}\n                </a>\n              </FormControl.Static>\n            </FormGroup>\n          )}\n          <FormGroup controlId=\"file\">\n            {!note.attachment && <ControlLabel>Attachment</ControlLabel>}\n            <FormControl onChange={handleFileChange} type=\"file\" />\n          </FormGroup>\n          <LoaderButton\n            block\n            type=\"submit\"\n            bsSize=\"large\"\n            bsStyle=\"primary\"\n            isLoading={isLoading}\n            disabled={!validateForm()}\n          >\n            Save\n          </LoaderButton>\n          <LoaderButton\n            block\n            bsSize=\"large\"\n            bsStyle=\"danger\"\n            onClick={handleDelete}\n            isLoading={isDeleting}\n          >\n            Delete\n          </LoaderButton>\n        </form>\n      )}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}