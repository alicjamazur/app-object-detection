{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alicjamazur/Desktop/projects/app-object-detection/web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/alicjamazur/Desktop/projects/app-object-detection/web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/alicjamazur/Desktop/projects/app-object-detection/web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useEffect}from\"react\";import{useHistory}from\"react-router-dom\";import{FormGroup,FormControl,ControlLabel}from\"react-bootstrap\";import LoaderButton from\"../components/LoaderButton\";import config from\"../config\";import\"./NewInference.css\";import{API}from\"aws-amplify\";import{onError}from\"../libs/errorLib\";import{Link}from\"react-router-dom\";import{Jumbotron,Row,Col}from'react-bootstrap';import{Button}from'react-bootstrap';export default function NewInference(){var file=useRef(null);var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),outputImage=_useState2[0],setOutputImage=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),inputImage=_useState4[0],setInputImage=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),inferenceMade=_useState8[0],setInferenceMade=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),inferenceStatus=_useState10[0],setInferenceStatus=_useState10[1];// Handle image submission\nfunction handleFileChange(event){file.current=event.target.files[0];// Convert image to base64\nvar reader=new FileReader();reader.readAsDataURL(file.current);reader.onloadend=function(){var base64string=reader.result;var imageBase64=base64string.substr(base64string.indexOf(',')+1);setInputImage(imageBase64);};}// Make inference \nfunction handleSubmit(_x){return _handleSubmit.apply(this,arguments);}function _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var response,coldStart;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();// Validate input file\nif(!(file.current&&file.current.type!=\"image/png\"&&file.current.type!=\"image/jpeg\")){_context.next=4;break;}alert(\" Pick a JPG or PNG file \");return _context.abrupt(\"return\");case 4:;setIsLoading(true);setInferenceStatus(\"Processing...\");_context.prev=7;console.log(\"inference\");_context.next=11;return inference(inputImage);case 11:response=_context.sent;setOutputImage(response);learnMore();_context.next=23;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](7);coldStart=onError(_context.t0);setInferenceMade(false);if(!coldStart){_context.next=23;break;}setInferenceStatus(\"Just few more seconds, Lambda is warming up...\");return _context.abrupt(\"return\",handleSubmit(event));case 23:setInferenceStatus(\"\");setIsLoading(false);case 25:case\"end\":return _context.stop();}}},_callee,null,[[7,16]]);}));return _handleSubmit.apply(this,arguments);}function learnMore(){setTimeout(function(){setInferenceMade(true);},5000);}// API call with Amplify\nfunction inference(inputImage){return API.post(\"inference\",\"\",{headers:{\"Content-Type\":\"application/json\",\"Accept\":\"application/json\"},body:inputImage});}// Render webpage\nreturn/*#__PURE__*/React.createElement(\"body\",null,/*#__PURE__*/React.createElement(\"div\",null,inferenceMade?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Jumbotron,{className:\"PostInference\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xs:5,md:5},/*#__PURE__*/React.createElement(\"h4\",null,\"Liked it?\"),/*#__PURE__*/React.createElement(\"h5\",null,\"If you are curious, learn more about the architecture of this app.\")),/*#__PURE__*/React.createElement(Col,{xs:5,md:5},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Button,{size:\"sm\",variant:\"primary\",href:\"/architecture\"},\"Learn more\")))))):null),/*#__PURE__*/React.createElement(\"div\",{className:\"NewInference\"},/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(FormGroup,{controlId:\"imageFile\"},/*#__PURE__*/React.createElement(ControlLabel,null,\"Choose an image to process (jpg or png)\"),/*#__PURE__*/React.createElement(FormControl,{onChange:handleFileChange,type:\"file\"})),/*#__PURE__*/React.createElement(\"p\",null,inferenceStatus))),/*#__PURE__*/React.createElement(\"div\",{className:\"Button\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(LoaderButton,{type:\"submit\",bsSize:\"large\",bsStyle:\"danger\",isLoading:isLoading},\"Detect objects\"))),/*#__PURE__*/React.createElement(\"img\",{class:\"center\",src:outputImage==\"\"?\"\":\"data:image/png;base64,\".concat(outputImage)}));}","map":{"version":3,"sources":["/Users/alicjamazur/Desktop/projects/app-object-detection/web-app/src/containers/NewInference.js"],"names":["React","useRef","useState","useEffect","useHistory","FormGroup","FormControl","ControlLabel","LoaderButton","config","API","onError","Link","Jumbotron","Row","Col","Button","NewInference","file","outputImage","setOutputImage","inputImage","setInputImage","isLoading","setIsLoading","inferenceMade","setInferenceMade","inferenceStatus","setInferenceStatus","handleFileChange","event","current","target","files","reader","FileReader","readAsDataURL","onloadend","base64string","result","imageBase64","substr","indexOf","handleSubmit","preventDefault","type","alert","console","log","inference","response","learnMore","coldStart","setTimeout","post","headers","body"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./NewInference.css\";\nimport { API } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport { Link } from \"react-router-dom\";\nimport {Jumbotron, Row, Col} from 'react-bootstrap'\nimport {Button} from 'react-bootstrap'\n\n\n\nexport default function NewInference() {\n  const file = useRef(null);\n  const [outputImage, setOutputImage] = useState(\"\");\n  const [inputImage, setInputImage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [inferenceMade, setInferenceMade] = useState(false);\n  const [inferenceStatus, setInferenceStatus] = useState(\"\");\n\n\n  // Handle image submission\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n\n    // Convert image to base64\n    var reader = new FileReader();\n    reader.readAsDataURL(file.current);\n    reader.onloadend = function() {\n    const base64string = reader.result;\n    let imageBase64 = base64string.substr(base64string.indexOf(',') + 1);\n    setInputImage(imageBase64);\n    }\n  }\n\n  // Make inference \n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    // Validate input file\n    if (file.current && (file.current.type != \"image/png\" && file.current.type != \"image/jpeg\")) {\n      alert(\n      ` Pick a JPG or PNG file `)\n      return;\n      };\n    \n    setIsLoading(true);\n    setInferenceStatus(\"Processing...\")\n\n    try {\n      console.log(\"inference\");\n      const response = await inference(inputImage);\n      setOutputImage(response);\n      learnMore();\n\n    } catch (e) {\n      const coldStart = onError(e);\n      setInferenceMade(false);\n\n      if (coldStart) {\n        setInferenceStatus(\"Just few more seconds, Lambda is warming up...\")\n        return handleSubmit(event);\n      }\n    }\n    setInferenceStatus(\"\");\n    setIsLoading(false);\n\n  }\n\n  function learnMore() {\n    setTimeout(() => {\n      setInferenceMade(true)\n    }, 5000);\n  }\n  \n\n  // API call with Amplify\n  function inference(inputImage) {\n    return API.post(\"inference\", \"\", {\n      headers: {\n        \"Content-Type\": \"application/json\", \n        \"Accept\": \"application/json\"\n      },\n      body: inputImage\n    });\n  }\n\n\n  // Render webpage\n  return (\n    <body>\n      <div>\n        {inferenceMade ? (\n          <>\n            <Jumbotron className=\"PostInference\">\n              <Row> \n                <Col xs={5} md={5}>\n                <h4>Liked it?</h4>\n                <h5>If you are curious, learn more about the architecture of this app.</h5>\n              </Col>\n              <Col xs={5} md={5}>\n                <p>\n                  <Button size=\"sm\" variant=\"primary\" href=\"/architecture\">Learn more</Button>\n                </p>\n              </Col>\n              </Row>\n            </Jumbotron>\n          </>\n          ) : null }\n      </div>\n      <div className=\"NewInference\">\n        <form>\n          <FormGroup controlId=\"imageFile\">\n            <ControlLabel>Choose an image to process (jpg or png)</ControlLabel>\n            <FormControl onChange={handleFileChange} type=\"file\" />\n          </FormGroup>\n          <p>{ inferenceStatus }</p>\n        </form>\n      </div>\n      <div className=\"Button\">\n        <form onSubmit={handleSubmit}>\n        <LoaderButton\n            type=\"submit\"\n            bsSize=\"large\"\n            bsStyle=\"danger\"\n            isLoading={isLoading}\n           \n          >\n          Detect objects\n          </LoaderButton>\n        </form>\n      </div>\n      <img class=\"center\" src={outputImage == \"\" ? \"\" : `data:image/png;base64,${outputImage}`} />\n    </body>\n  );\n  }\n"]},"metadata":{},"sourceType":"module"}