{"ast":null,"code":"var _jsxFileName = \"/Users/alicjamazur/Desktop/work-in-progress/app-yolov2-client /src/containers/Architecture.js\";\nimport React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./NewInference.css\";\nimport { API } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport { Link } from \"react-router-dom\";\nexport default function HowItWorks() {\n  const file = useRef(null);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n    console.log(file.current);\n    var reader = new FileReader();\n    reader.readAsDataURL(file.current);\n\n    reader.onloadend = function () {\n      const base64string = reader.result; // console.log(\"Base64 String - \", base64string);\n\n      var imageBase64 = base64string.substr(base64string.indexOf(',') + 1);\n      setInputImage(imageBase64); // console.log('Base64 String without Tags- ', imageBase64);\n    };\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      while (outputImage == null) {\n        let response = await inference(inputImage);\n        setOutputImage(response);\n      }\n    } catch (e) {\n      onError(e);\n    }\n\n    setIsLoading(false);\n  }\n\n  function inference(inputImage) {\n    return API.post(\"inference\", ``, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: inputImage\n    });\n  }\n\n  function renderImage(image) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `data:image/png;base64,${image}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"architecture.png\",\n    usemap: \"#workmap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"map\", {\n    name: \"workmap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"area\", {\n    shape: \"circle\",\n    coords: \"34,44,270\",\n    alt: \"1\",\n    href: onHover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"area\", {\n    shape: \"circle\",\n    coords: \"337,300,44\",\n    alt: \"2\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })));\n} //","map":{"version":3,"sources":["/Users/alicjamazur/Desktop/work-in-progress/app-yolov2-client /src/containers/Architecture.js"],"names":["React","useRef","useState","useHistory","FormGroup","FormControl","ControlLabel","LoaderButton","config","API","onError","Link","HowItWorks","file","history","isLoading","setIsLoading","handleFileChange","event","current","target","files","console","log","reader","FileReader","readAsDataURL","onloadend","base64string","result","imageBase64","substr","indexOf","setInputImage","handleSubmit","preventDefault","outputImage","response","inference","inputImage","setOutputImage","e","post","headers","body","renderImage","image","onHover"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./NewInference.css\";\nimport { API } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport { Link } from \"react-router-dom\";\n\n\nexport default function HowItWorks() {\n  const file = useRef(null);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  \n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n    console.log(file.current);\n\n    var reader = new FileReader();\n    reader.readAsDataURL(file.current);\n    reader.onloadend = function() {\n      const base64string = reader.result;\n      // console.log(\"Base64 String - \", base64string);\n      var imageBase64 = base64string.substr(base64string.indexOf(',') + 1);\n      setInputImage(imageBase64);\n      // console.log('Base64 String without Tags- ', imageBase64);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    \n\n    setIsLoading(true);\n\n    try {\n\n      while (outputImage==null) {\n        let response = await inference(inputImage);\n        setOutputImage(response);\n      }\n    } catch (e) {\n      onError(e);\n    }\n    setIsLoading(false);\n  }\n  \n  function inference(inputImage) {\n    return API.post(\"inference\", ``, {\n      headers: {\n        \"Content-Type\": \"application/json\", \n        \"Accept\": \"application/json\"\n      },\n      body: inputImage\n    });\n    \n  }\n  \n  function renderImage(image) {\n    return (\n      <div>\n        <img src={`data:image/png;base64,${image}`} />\n      </div>\n    );\n  }\n\n  return (\n    <body>\n      <div className=\"Button\">\n\n      </div>\n      <img src=\"architecture.png\" usemap=\"#workmap\" />\n      <map name=\"workmap\">\n        <area shape=\"circle\" coords=\"34,44,270\" alt=\"1\" href={onHover} />\n        <area shape=\"circle\" coords=\"337,300,44\" alt=\"2\" href=\"\" />\n      </map>\n    </body>\n  );\n  }\n\n  // "]},"metadata":{},"sourceType":"module"}